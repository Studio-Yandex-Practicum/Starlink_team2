"""first

Revision ID: 5831d2df2dd2
Revises: 
Create Date: 2024-11-24 16:10:00.837767

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision: str = '5831d2df2dd2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee_emails',
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('unique_id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('unique_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('roles',
    sa.Column('role_name', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('unique_id', sa.UUID(), nullable=False),
    sa.CheckConstraint('length(role_name) BETWEEN 1 AND 256'),
    sa.PrimaryKeyConstraint('unique_id'),
    sa.UniqueConstraint('role_name')
    )
    op.create_table('users',
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('last_name', sa.String(length=256), nullable=True),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('unique_id', sa.UUID(), nullable=False),
    sa.CheckConstraint("last_name != ''"),
    sa.CheckConstraint("name !=''"),
    sa.PrimaryKeyConstraint('unique_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('menus',
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('parent', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('is_folder', sa.Boolean(), nullable=True),
    sa.Column('image_link', sa.String(length=256), nullable=True),
    sa.Column('role_access', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('unique_id', sa.UUID(), nullable=False),
    sa.CheckConstraint("name != ''"),
    sa.CheckConstraint('parent >= 0'),
    sa.ForeignKeyConstraint(['role_access'], ['roles.unique_id'], ),
    sa.PrimaryKeyConstraint('unique_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('quizs',
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('edited_by', sa.UUID(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('unique_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.unique_id'], ),
    sa.ForeignKeyConstraint(['edited_by'], ['users.unique_id'], ),
    sa.PrimaryKeyConstraint('unique_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('telegramusers',
    sa.Column('username', sa.String(length=256), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('last_name', sa.String(length=256), nullable=True),
    sa.Column('email_id', sa.UUID(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('telegram_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('unique_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['email_id'], ['employee_emails.unique_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.unique_id'], ),
    sa.PrimaryKeyConstraint('unique_id'),
    sa.UniqueConstraint('telegram_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('quizquestions',
    sa.Column('quiz_id', sa.UUID(), nullable=True),
    sa.Column('image_link', sa.String(length=256), nullable=True),
    sa.Column('content', sa.String(length=256), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('unique_id', sa.UUID(), nullable=False),
    sa.CheckConstraint('length(image_link) BETWEEN 10 AND 256'),
    sa.CheckConstraint('number >= 1'),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizs.unique_id'], ),
    sa.PrimaryKeyConstraint('unique_id')
    )
    op.create_table('userquizes',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('quize_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('started_time', sa.DateTime(), nullable=True),
    sa.Column('finished_time', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('unique_id', sa.UUID(), nullable=False),
    sa.CheckConstraint('started_time < finished_time'),
    sa.ForeignKeyConstraint(['quize_id'], ['quizs.unique_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['telegramusers.unique_id'], ),
    sa.PrimaryKeyConstraint('unique_id')
    )
    op.create_table('quizanswers',
    sa.Column('quiz_id', sa.UUID(), nullable=True),
    sa.Column('question_id', sa.UUID(), nullable=True),
    sa.Column('correct_answer', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('content', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('unique_id', sa.UUID(), nullable=False),
    sa.CheckConstraint('length(content) BETWEEN 10 AND 256'),
    sa.ForeignKeyConstraint(['question_id'], ['quizquestions.unique_id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['users.unique_id'], ),
    sa.PrimaryKeyConstraint('unique_id')
    )
    op.create_table('takenanswers',
    sa.Column('quiz_id', sa.UUID(), nullable=True),
    sa.Column('question_id', sa.UUID(), nullable=True),
    sa.Column('answer_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('unique_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['quizanswers.unique_id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['quizquestions.unique_id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizs.unique_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.unique_id'], ),
    sa.PrimaryKeyConstraint('unique_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('takenanswers')
    op.drop_table('quizanswers')
    op.drop_table('userquizes')
    op.drop_table('quizquestions')
    op.drop_table('telegramusers')
    op.drop_table('quizs')
    op.drop_table('menus')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('employee_emails')
    # ### end Alembic commands ###
